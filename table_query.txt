CREATE TABLE Non_academic_staff(
     Nac_staff_id VARCHAR(10) PRIMARY KEY,
	 F_name VARCHAR(25) NOT NULL,
	 L_name VARCHAR(25) NOT NULL,
	 Gender ENUM('Male','Female') NOT NULL,
	 Address VARCHAR(60),
	 NIC_number VARCHAR(15) NOT NULL,
	 E_mail VARCHAR(30),
	 Status ENUM('Working','Not_Working') DEFAULT 'Working',
	 Appoint_date DATE NOT NULL,
	 Fac_id VARCHAR(5) NOT NULL,
	 FOREIGN KEY(Fac_id) REFERENCES faculty(Fac_id) ON DELETE CASCADE ON UPDATE CASCADE
	 );
	 
	 CREATE TABLE NAC_staff_CONTACT(
	      Nac_staff_id VARCHAR(10),
		  Contact_no CHAR(10),
		  PRIMARY KEY(Nac_staff_id, Contact_no),
		  FOREIGN KEY(Nac_staff_id) REFERENCES Non_academic_staff(Nac_staff_id)
		  );
		  
	 
	 CREATE TABLE Security(
	     Sec_id VARCHAR(10) PRIMARY KEY,
		 Work_shift ENUM('Day','Night') DEFAULT 'Day',
		 Duty_area VARCHAR(30),
		 FOREIGN KEY(Sec_id) REFERENCES Non_academic_staff(Nac_staff_id)
		 );
		 
	CREATE TABLE Cleaner(
	     Cleaner_id VARCHAR(10) PRIMARY KEY,
		 Work_shift ENUM('Morning','Evening'),
		 Assigned_area VARCHAR(30),
		 FOREIGN KEY(Cleaner_id) REFERENCES Non_academic_staff(Nac_staff_id)
		 );
		 
	CREATE TABLE Administrator(
	   AD_id VARCHAR(10) PRIMARY KEY,
	   Office_room_no VARCHAR(10),
	   FOREIGN KEY(AD_id) REFERENCES Non_academic_staff(Nac_staff_id)
	   );
	   
	CREATE TABLE Tech_officer(
	   TO_id VARCHAR(10) PRIMARY KEY,
	   Lab_assigned VARCHAR(25),
	   FOREIGN KEY(TO_id) REFERENCES Non_academic_staff(Nac_staff_id)
	   );
	   
		 
		 
	INSERT INTO Non_academic_staff (Nac_staff_id, F_name, L_name, Gender, Address, NIC_number, E_mail, Status, Appoint_date, Fac_id)
     VALUES
    ('NAC001','Sunil','Perera','Male','No.12,Main Street,Galle','931234567V','sunil.perera@uni.lk','Working','1993-03-21','FAC07'),
    ('NAC002','Kamal','Fernando','Male','No.45,Temple Road,Matara','902345678V','kamal.fernando@uni.lk','Working','1990-06-12','FAC07'),
    ('NAC003','Nimali','Silva','Female','No.10,Station Road,Kandy','952134567V','nimali.silva@uni.lk','Not_Working','1995-01-10','FAC07'),
    ('NAC004','Ruwan','Jayasinghe','Male','No.32,Lake View,Colombo','881245678V','ruwan.j@uni.lk','Working','2012-09-14','FAC07'),
    ('NAC005','Dilani','Weerasinghe','Female','No.55,Hill Street,Kurunegala','972346578V','dilani.w@uni.lk','Working','2020-02-05','FAC07'),
    ('NAC006','Roshan','Abeywickrama','Male','No.8,New Road,Hambantota','911234589V','roshan.a@uni.lk','Working','2016-07-28','FAC07'),
    ('NAC007','Shanika','Perera','Female','No.76,Galle Road,Panadura','993456781V','shanika.p@uni.lk','Not_Working','2021-03-11','FAC07');


   INSERT INTO NAC_staff_CONTACT (Nac_staff_id, Contact_no) 
   VALUES
     ('NAC001', '0712345678'),
     ('NAC001', '0779876543'),
     ('NAC002', '0723456789'),
     ('NAC003', '0719876543'),
     ('NAC004', '0751234567'),
     ('NAC004', '0771234567');

		 
	INSERT INTO Security (Sec_id, Work_shift, Duty_area) 
	VALUES
    ('NAC001', 'Day', 'Main Gate'),
    ('NAC004', 'Night', 'Laboratory Area');

	 
	INSERT INTO Cleaner (Cleaner_id, Work_shift, Assigned_area) 
	VALUES
    ('NAC005', 'Morning', 'Lecture Hall'),
    ('NAC002', 'Evening', 'Laboratory Area');
	
	INSERT INTO Administrator (AD_id, Office_room_no) 
	VALUES
     ('NAC003', 'A101');
	 
	 
	INSERT INTO Tech_officer (TO_id,Lab_assigned) 
	VALUES
    ('NAC006','Computer Lab'),
    ('NAC007','Electronics Lab');

	 
	 CREATE TABLE Medical(
	     Med_id VARCHAR(10) PRIMARY KEY,
		 Med_name VARCHAR(30),
		 Status ENUM('Approved','Not approved') DEFAULT 'Not approved',
		 Date_issued DATE,
		 Reason VARCHAR(60),
		 Reg_no VARCHAR(12),
		 FOREIGN KEY(Reg_no) REFERENCES Student(Reg_no) ON DELETE CASCADE ON UPDATE CASCADE
		 );
		 
		 
		 INSERT INTO Medical (Med_id, Med_name, Status, Date_issued, Reason, Reg_no) 
		 VALUES
              ('MED001','Flu Report','Approved','2025-03-12','Absent due to high fever','TG/2023/1775'),
              ('MED002','Injury Certificate','Approved','2025-05-04','Leg injury during sports','TG/2023/1780'),
              ('MED003','Medical Leave Form','Not Approved','2025-06-15','Late submission','TG/2021/1452'),
              ('MED004','Covid-19 Test Report','Approved','2025-02-22','Positive for COVID-19','TG/2023/1784'),
              ('MED005','Eye Infection Report','Not Approved','2025-07-10','Unclear medical document','TG/2023/1787');
			  
			  
			  
			  //////////////////////////////////////////////////////////////////////
			  
			  
	
      CREATE TABLE Session(
             Sub_code VARCHAR(10),
			 Session_id VARCHAR(10),
			 Session_name VARCHAR(20),
			 Hour INT,
			 Ses_date DATE,
			 PRIMARY KEY(Sub_code, Session_id),
			 FOREIGN KEY(Sub_code) REFERENCES Subject(Sub_code)
			  ON DELETE CASCADE ON UPDATE CASCADE
			 );
			 
	
	CREATE TABLE Session_Student(
	        Sub_code VARCHAR(10),
			Session_id VARCHAR(10),
			Reg_no VARCHAR(12),
			Status ENUM('Present','Absent') DEFAULT 'Absent',
			PRIMARY KEY(Sub_code,Session_id,Reg_no),
			FOREIGN KEY(Sub_code, Session_id) REFERENCES Session(Sub_code, Session_id),
			FOREIGN KEY(Reg_no) REFERENCES Student(Reg_no)
			);
	 


         CREATE VIEW Attendance_table AS
SELECT st.Reg_no,
       st.F_name,
	   st.L_name,
	   ss.Sub_code,
	   ROUND(
	        (
			SUM(
			  CASE
			     WHEN ss.Status='Present' THEN 1
				 WHEN ss.Status='Absent'
				      AND m.Status='Approved' THEN 1
				 ELSE 0
			  END
			  )/ COUNT(ss.Session_id)
			  )*100,2
			  )AS Attendance_Percentage,
	  CASE
        WHEN (
            SUM(
                CASE
                    WHEN ss.Status='Present' THEN 1
                    WHEN ss.Status='Absent' AND m.Status='Approved' THEN 1
                    ELSE 0
                END
            ) / COUNT(ss.Session_id)
        ) * 100 >= 80 THEN 'Eligible'
        ELSE 'Not Eligible'
    END AS Exam_Eligibility
	FROM Student st
	JOIN Session_Student ss ON st.Reg_no = ss.Reg_no
	JOIN Session se ON se.Session_id = ss.Session_id
	LEFT JOIN Medical m ON st.Reg_no = m.Reg_no AND 
	  m.Status='Approved' AND m.Date_issued = se.Ses_date
    GROUP BY st.Reg_no,ss.Sub_code
    ORDER BY st.Reg_no,ss.Sub_code;	
	
	     
		
		mysql> SELECT * FROM Attendance_table;
+--------------+----------+------------+----------+-----------------------+------------------+
| Reg_no       | F_name   | L_name     | Sub_code | Attendance_Percentage | Exam_Eligibility |
+--------------+----------+------------+----------+-----------------------+------------------+
| TG/2023/1775 | Nivethan | Rajkumar   | ICT1212  |                 66.67 | Not Eligible     |
| TG/2023/1780 | Sharanya | Kumar      | ICT1212  |                 66.67 | Not Eligible     |
| TG/2023/1784 | Dilshan  | Abeysekara | ICT1233  |                 66.67 | Not Eligible     |
+--------------+----------+------------+----------+-----------------------+------------------+
		 
	 